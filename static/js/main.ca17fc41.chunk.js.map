{"version":3,"sources":["App.js","index.js"],"names":["extend","OrbitControls","Controls","props","useThree","gl","camera","ref","useRef","useRender","current","update","args","domElement","Planet","group","mesh","size","diameter","useLoader","THREE","image","texture","randomAngle","Math","random","PI","x","cos","aphelion","z","sin","position","useMemo","useFrame","rotation","y","orbitalPeriod","dayLength","castShadow","attach","map","roughness","Sun","fog","distance","color","ReactDOM","render","shadowMap","intensity","autoRotate","enablePan","enableZoom","enableDamping","dampingFactor","rotateSpeed","fallback","data","planets","planet","index","key","name","document","getElementById"],"mappings":"8tDAMAA,YAAO,CAAEC,oBACT,IAAMC,EAAW,SAAAC,GAAU,IAAD,EACFC,cAAfC,EADiB,EACjBA,GAAIC,EADa,EACbA,OACNC,EAAMC,mBAEZ,OADAC,aAAU,kBAAMF,EAAIG,QAAQC,YACrB,iDAAeJ,IAAKA,EAAKK,KAAM,CAACN,EAAQD,EAAGQ,aAAiBV,KAGpE,SAASW,EAAOX,GACf,IAAMY,EAAQP,mBACRQ,EAAOR,mBACPS,EAAO,CAACd,EAAMe,SAAW,KAAQ,GAAI,IAHrB,EAIJC,YAAUC,gBAAqB,CAAC,WAAD,OAAYjB,EAAMkB,SAA5DC,EAJe,oBAMhBC,EAAcC,KAAKC,SAAWD,KAAKE,GAAK,EACxCC,EAAIH,KAAKI,IAAIL,GAAepB,EAAM0B,SAClCC,EAAIN,KAAKO,IAAIR,GAAepB,EAAM0B,SAElCG,EAAWC,mBAAQ,WACxB,MAAO,CAACN,EAAI,GAAI,EAAGG,EAAI,MACrB,CAACH,EAAGG,IAOP,OALAI,aAAS,WACRnB,EAAML,QAAQyB,SAASC,GAAK,EAAIjC,EAAMkC,cACtCrB,EAAKN,QAAQyB,SAASC,GAAK,EAAIjC,EAAMmC,aAIrC,2BAAO/B,IAAKQ,GACX,0BACCR,IAAKS,EACLgB,SAAUA,EACVO,YAAU,GACV,0CAAsBC,OAAO,WAAW5B,KAAMK,IAC9C,0CAAsBuB,OAAO,WAAWC,IAAKnB,EAASoB,UAAW,MAMrE,SAASC,IAAO,IAAD,EACIxB,YAAUC,gBAAqB,CAAC,oBAA3CE,EADO,oBAId,OACC,0BAAMU,SAAU,CAAC,EAAG,EAAG,IACtB,0CAAsBQ,OAAO,WAAW5B,KAJ7B,CAAC,QAAmB,GAAI,MAKnC,uCAAmB4B,OAAO,WAAWC,IAAKnB,EAASsB,KAAK,IACxD,gCAAYC,SAAU,KAAMC,MAAM,WCjDrCC,IAASC,OAAO,mBDsDT,WACN,OACC,kBAAC,IAAD,CAAQC,WAAS,EAAC3C,OAAQ,CAAE0B,SAAU,CAAC,EAAG,EAAG,KAC5C,kCAAckB,UAAW,KACzB,kBAAC,EAAD,CACCC,YAAU,EACVC,WAAW,EACXC,YAAY,EACZC,eAAa,EACbC,cAAe,GACfC,YAAa,KAEd,kBAAC,WAAD,CAAUC,SAAU,MACnB,kBAACd,EAAD,MACCe,EAAKC,QAAQlB,KAAI,SAACmB,EAAQC,GAAT,OAAmB,kBAAC/C,EAAD,iBAAY8C,EAAZ,CAAoBC,MAAOA,EAAOC,IAAKF,EAAOG,eCpEvE,MAASC,SAASC,eAAe,W","file":"static/js/main.ca17fc41.chunk.js","sourcesContent":["import React, { useRef, Suspense, useMemo } from \"react\";\nimport { Canvas, useLoader, useFrame, extend, useThree, useRender } from \"react-three-fiber\";\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport * as THREE from 'three';\nimport data from './data.json';\n\nextend({ OrbitControls })\nconst Controls = props => {\n\tconst { gl, camera } = useThree();\n\tconst ref = useRef();\n\tuseRender(() => ref.current.update());\n\treturn <orbitControls ref={ref} args={[camera, gl.domElement]} {...props} />;\n};\n\nfunction Planet(props) {\n\tconst group = useRef();\n\tconst mesh = useRef();\n\tconst size = [props.diameter / 150000, 32, 32];\n\tconst [texture] = useLoader(THREE.TextureLoader, [`planets/${props.image}`]);\n\n\tconst randomAngle = Math.random() * Math.PI * 2;\n\tconst x = Math.cos(randomAngle) * props.aphelion;\n\tconst z = Math.sin(randomAngle) * props.aphelion;\n\n\tconst position = useMemo(() => {\n\t\treturn [x / 50, 0, z / 50];\n\t}, [x, z]);\n\n\tuseFrame(() => {\n\t\tgroup.current.rotation.y += 1 / props.orbitalPeriod;\n\t\tmesh.current.rotation.y += 1 / props.dayLength;\n\t});\n\n\treturn (\n\t\t<group ref={group}>\n\t\t\t<mesh\n\t\t\t\tref={mesh}\n\t\t\t\tposition={position}\n\t\t\t\tcastShadow>\n\t\t\t\t<sphereBufferGeometry attach=\"geometry\" args={size} />\n\t\t\t\t<meshStandardMaterial attach=\"material\" map={texture} roughness={1} />\n\t\t\t</mesh>\n\t\t</group>\n\t);\n}\n\nfunction Sun() {\n\tconst [texture] = useLoader(THREE.TextureLoader, [`planets/sun.jpg`]);\n\tconst size = [1392530 / 2500000, 32, 32];\n\n\treturn (\n\t\t<mesh position={[0, 0, 0]}>\n\t\t\t<sphereBufferGeometry attach=\"geometry\" args={size} />\n\t\t\t<meshBasicMaterial attach=\"material\" map={texture} fog={false} />\n\t\t\t<pointLight distance={6100} color=\"white\" />\n\t\t</mesh>\n\t);\n}\n\nexport function App() {\n\treturn (\n\t\t<Canvas shadowMap camera={{ position: [0, 0, 3] }}>\n\t\t\t<ambientLight intensity={0.2} />\n\t\t\t<Controls\n\t\t\t\tautoRotate\n\t\t\t\tenablePan={false}\n\t\t\t\tenableZoom={true}\n\t\t\t\tenableDamping\n\t\t\t\tdampingFactor={0.5}\n\t\t\t\trotateSpeed={0.5}\n\t\t\t/>\n\t\t\t<Suspense fallback={null}>\n\t\t\t\t<Sun />\n\t\t\t\t{data.planets.map((planet, index) => <Planet {...planet} index={index} key={planet.name} />)}\n\t\t\t</Suspense>\n\t\t</Canvas>\n\t);\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}